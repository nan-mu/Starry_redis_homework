diff --git a/packets.pcap b/packets.pcap
index c7b2559..caeec66 100644
Binary files a/packets.pcap and b/packets.pcap differ
diff --git a/ulib/axstarry/syscall_entry/src/test.rs b/ulib/axstarry/syscall_entry/src/test.rs
index 70431fc..ba3bea0 100644
--- a/ulib/axstarry/syscall_entry/src/test.rs
+++ b/ulib/axstarry/syscall_entry/src/test.rs
@@ -439,20 +439,28 @@ impl TestResult {
         let buf = read("/socketlog").unwrap();
         let mut port = Vec::new();
         assert!(buf.len() % 4 == 0);
-        error!("total built {} tcp link(s)", buf.len() / 4);
         for chunk in buf.chunks(2) {
             let mut array = [0; 2];
             array.copy_from_slice(chunk);
             port.push(u16::from_be_bytes(array));
         }
+        let mut last_port = 999u16;
+        let mut true_port = Vec::new();
         for chunk in port.chunks(2).into_iter() {
             let [local, remote] = chunk else {
                 panic!("not enough bytes");
             };
-            if local != &0 {
-                error!("tcp link src_port:{local} dst_port:{remote}")
-            };
+            if *local != last_port {
+                last_port = *local;
+                true_port.push((*local, *remote));
+            }
         }
+        error!("total built {} tcp link(s)", true_port.len());
+        true_port.into_iter().for_each(|(local, remote)| {
+            if local != 0 {
+                error!("local port: {}, remote port: {}", local, remote);
+            }
+        });
         error!(
             " --------------- all test ended, passed {} / {} --------------- ",
             self.accepted, self.sum
diff --git a/yezhengnan-lesson3.patch b/yezhengnan-lesson3.patch
index e45cd9e..e69de29 100644
--- a/yezhengnan-lesson3.patch
+++ b/yezhengnan-lesson3.patch
@@ -1,109 +0,0 @@
-diff --git a/modules/axnet/src/smoltcp_impl/tcp.rs b/modules/axnet/src/smoltcp_impl/tcp.rs
-index 2162c82..47f8558 100644
---- a/modules/axnet/src/smoltcp_impl/tcp.rs
-+++ b/modules/axnet/src/smoltcp_impl/tcp.rs
-@@ -62,14 +62,6 @@ impl TcpSocket {
- 
-     /// Creates a new TCP socket that is already connected.
-     fn new_connected(handle: SocketHandle, local_addr: IpEndpoint, peer_addr: IpEndpoint) -> Self {
--        if (&peer_addr).port == 6380 {
--            let port = [
--                (&local_addr).port.to_be_bytes(),
--                (&peer_addr).port.to_be_bytes(),
--            ]
--            .concat();
--            write("/socketlog", [read("/socketlog").unwrap(), port].concat()).unwrap();
--        }
-         Self {
-             state: AtomicU8::new(STATE_CONNECTED),
-             handle: UnsafeCell::new(Some(handle)),
-@@ -157,6 +149,14 @@ impl TcpSocket {
-                         socket.remote_endpoint().unwrap(),
-                     ))
-                 })?;
-+            if (&remote_endpoint).port == 6380 {
-+                let port = [
-+                    (&local_endpoint).port.to_be_bytes(),
-+                    (&remote_endpoint).port.to_be_bytes(),
-+                ]
-+                .concat();
-+                write("/socketlog", [read("/socketlog").unwrap(), port].concat()).unwrap();
-+            }
-             unsafe {
-                 // SAFETY: no other threads can read or write these fields as we
-                 // have changed the state to `BUSY`.
-diff --git a/packets.pcap b/packets.pcap
-index ce73fd4..c7b2559 100644
-Binary files a/packets.pcap and b/packets.pcap differ
-diff --git a/yezhengnan-lesson3.patch b/yezhengnan-lesson3.patch
-index 4706855..e69de29 100644
---- a/yezhengnan-lesson3.patch
-+++ b/yezhengnan-lesson3.patch
-@@ -1,67 +0,0 @@
--diff --git a/yezhengnan-lesson3.patch b/yezhengnan-lesson3.patch
--index 7c680d3..e69de29 100644
----- a/yezhengnan-lesson3.patch
--+++ b/yezhengnan-lesson3.patch
--@@ -1,62 +0,0 @@
---diff --git a/packets.pcap b/packets.pcap
---index 1e8609e..4b6d71c 100644
---Binary files a/packets.pcap and b/packets.pcap differ
---diff --git a/ulib/axstarry/syscall_entry/src/test.rs b/ulib/axstarry/syscall_entry/src/test.rs
---index 7dec80b..70431fc 100644
------ a/ulib/axstarry/syscall_entry/src/test.rs
---+++ b/ulib/axstarry/syscall_entry/src/test.rs
---@@ -449,19 +449,19 @@ impl TestResult {
---             let [local, remote] = chunk else {
---                 panic!("not enough bytes");
---             };
----            if local != 0 {
---+            if local != &0 {
---                 error!("tcp link src_port:{local} dst_port:{remote}")
---             };
---         }
----        info!(
---+        error!(
---             " --------------- all test ended, passed {} / {} --------------- ",
---             self.accepted, self.sum
---         );
----        info!(" --------------- failed tests: --------------- ");
---+        error!(" --------------- failed tests: --------------- ");
---         for test in &self.failed_testcases {
---             info!("{:?}", test);
---         }
----        info!(" --------------- end --------------- ");
---+        error!(" --------------- end --------------- ");
---     }
--- }
--- 
---diff --git a/ulib/axstarry/syscall_net/src/imp.rs b/ulib/axstarry/syscall_net/src/imp.rs
---index 3c1d68c..015a35c 100644
------ a/ulib/axstarry/syscall_net/src/imp.rs
---+++ b/ulib/axstarry/syscall_net/src/imp.rs
---@@ -5,7 +5,6 @@ use core::slice::{from_raw_parts, from_raw_parts_mut};
--- 
--- use alloc::sync::Arc;
--- use axerrno::AxError;
----use axfs::api::{read, write};
--- use axlog::{debug, error, info, warn};
--- use axnet::{into_core_sockaddr, IpAddr, SocketAddr};
--- use axprocess::current_process;
---diff --git a/ulib/axstarry/syscall_net/src/socket.rs b/ulib/axstarry/syscall_net/src/socket.rs
---index 6d3d0b8..396c86b 100644
------ a/ulib/axstarry/syscall_net/src/socket.rs
---+++ b/ulib/axstarry/syscall_net/src/socket.rs
---@@ -558,12 +558,12 @@ impl Socket {
---         match &*inner {
---             SocketInner::Tcp(s) => {
---                 let port = [
----                    addr.port.to_be_bytes(),
---                     s.local_addr().unwrap().port().to_be_bytes(),
---+                    addr.port.to_be_bytes(),
---                 ]
---                 .concat();
---                 write("/socketlog", [read("/socketlog").unwrap(), port].concat());
----                error!("catch tcp: {}", s.local_addr().unwrap().port());
---+                // error!("catch tcp: {}", s.local_addr().unwrap().port());
---                 s.connect(into_core_sockaddr(addr))
---             }
---             SocketInner::Udp(s) => {
